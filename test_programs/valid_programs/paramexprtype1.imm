; ModuleID = 'grace program'
source_filename = "grace program"

@a = private global i32 0
@b = private global i32 0
@c = private global i32 0
@d = private global i32 0

define i32 @main() {
entry:
  %lval_tmp = load i32, i32* @a, align 4
  %lval_tmp1 = load i32, i32* @b, align 4
  %lval_tmp2 = load i32, i32* @c, align 4
  %0 = call i32 @"test_$1"(i32 %lval_tmp, i32 %lval_tmp1, i32 %lval_tmp2)
  %lval_tmp3 = load i32, i32* @a, align 4
  %lval_tmp4 = load i32, i32* @b, align 4
  %addtmp = add i32 %lval_tmp3, %lval_tmp4
  %lval_tmp5 = load i32, i32* @c, align 4
  %addtmp6 = add i32 %addtmp, %lval_tmp5
  %lval_tmp7 = load i32, i32* @c, align 4
  %1 = call i32 @"test_$1"(i32 %0, i32 %addtmp6, i32 %lval_tmp7)
  store i32 %1, i32* @d, align 4
  ret i32 0
}

define i32 @"test_$1"(i32 %0, i32 %1, i32 %2) {
entry:
  %a = alloca i32, align 4
  store i32 %0, i32* %a, align 4
  %b = alloca i32, align 4
  store i32 %1, i32* %b, align 4
  %c = alloca i32, align 4
  store i32 %2, i32* %c, align 4
  %lval_tmp = load i32, i32* %a, align 4
  %lval_tmp1 = load i32, i32* %b, align 4
  %addtmp = add i32 %lval_tmp, %lval_tmp1
  %lval_tmp2 = load i32, i32* %c, align 4
  %addtmp3 = add i32 %addtmp, %lval_tmp2
  ret i32 %addtmp3

after_ret:                                        ; No predecessors!
  ret i32 0
}
