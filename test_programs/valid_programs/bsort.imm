; ModuleID = 'grace program'
source_filename = "grace program"

@", " = private constant [3 x i8] c", \00", align 1
@"\0A" = private constant [2 x i8] c"\0A\00", align 1
@seed = private global i32 0
@i = private global i32 0
@x = private global [16 x i32] zeroinitializer
@"Initial array: " = private constant [16 x i8] c"Initial array: \00", align 1
@"Sorted  array: " = private constant [16 x i8] c"Sorted  array: \00", align 1

define i32 @main() {
entry:
  store i32 65, i32* @seed, align 4
  store i32 0, i32* @i, align 4
  br label %cond

cond:                                             ; preds = %body, %entry
  %lval_tmp = load i32, i32* @i, align 4
  %lesstmp = icmp slt i32 %lval_tmp, 16
  br i1 %lesstmp, label %body, label %after

body:                                             ; preds = %cond
  %lval_tmp1 = load i32, i32* @seed, align 4
  %multmp = mul i32 %lval_tmp1, 137
  %addtmp = add i32 %multmp, 221
  %lval_tmp2 = load i32, i32* @i, align 4
  %addtmp3 = add i32 %addtmp, %lval_tmp2
  %modtmp = srem i32 %addtmp3, 101
  store i32 %modtmp, i32* @seed, align 4
  %lval_tmp4 = load i32, i32* @i, align 4
  %pointer = getelementptr [16 x i32], [16 x i32]* @x, i32 0, i32 %lval_tmp4
  %lval_tmp5 = load i32, i32* @seed, align 4
  store i32 %lval_tmp5, i32* %pointer, align 4
  %lval_tmp6 = load i32, i32* @i, align 4
  %addtmp7 = add i32 %lval_tmp6, 1
  store i32 %addtmp7, i32* @i, align 4
  br label %cond

after:                                            ; preds = %cond
  call void @"writeArray_$3"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"Initial array: ", i32 0, i32 0), i32 16, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @x, i32 0, i32 0))
  call void @"bsort_$1"(i32 16, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @x, i32 0, i32 0))
  call void @"writeArray_$3"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"Sorted  array: ", i32 0, i32 0), i32 16, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @x, i32 0, i32 0))
  ret i32 0
}

declare void @writeString(i8*)

declare void @writeInteger(i32)

define void @"bsort_$1"(i32 %0, i32* %1) {
entry:
  %changed = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %0, i32* %n, align 4
  %x = alloca i32*, align 8
  store i32* %1, i32** %x, align 8
  store i32 1, i32* %changed, align 4
  br label %cond

cond:                                             ; preds = %after3, %entry
  %lval_tmp = load i32, i32* %changed, align 4
  %greatertmp = icmp sgt i32 %lval_tmp, 0
  br i1 %greatertmp, label %body, label %after

body:                                             ; preds = %cond
  store i32 0, i32* %changed, align 4
  store i32 0, i32* %i, align 4
  br label %cond1

after:                                            ; preds = %cond
  ret void

cond1:                                            ; preds = %after7, %body
  %lval_tmp4 = load i32, i32* %i, align 4
  %lval_tmp5 = load i32, i32* %n, align 4
  %subtmp = sub i32 %lval_tmp5, 1
  %lesstmp = icmp slt i32 %lval_tmp4, %subtmp
  br i1 %lesstmp, label %body2, label %after3

body2:                                            ; preds = %cond1
  br label %cond6

after3:                                           ; preds = %cond1
  br label %cond

cond6:                                            ; preds = %body2
  %lval_tmp8 = load i32, i32* %i, align 4
  %lval_tmp9 = load i32*, i32** %x, align 8
  %pointer = getelementptr i32, i32* %lval_tmp9, i32 %lval_tmp8
  %lval_tmp10 = load i32, i32* %pointer, align 4
  %lval_tmp11 = load i32, i32* %i, align 4
  %addtmp = add i32 %lval_tmp11, 1
  %lval_tmp12 = load i32*, i32** %x, align 8
  %pointer13 = getelementptr i32, i32* %lval_tmp12, i32 %addtmp
  %lval_tmp14 = load i32, i32* %pointer13, align 4
  %greatertmp15 = icmp sgt i32 %lval_tmp10, %lval_tmp14
  br i1 %greatertmp15, label %then, label %after7

then:                                             ; preds = %cond6
  %lval_tmp16 = load i32, i32* %i, align 4
  %lval_tmp17 = load i32*, i32** %x, align 8
  %pointer18 = getelementptr i32, i32* %lval_tmp17, i32 %lval_tmp16
  %lval_tmp19 = load i32, i32* %i, align 4
  %addtmp20 = add i32 %lval_tmp19, 1
  %lval_tmp21 = load i32*, i32** %x, align 8
  %pointer22 = getelementptr i32, i32* %lval_tmp21, i32 %addtmp20
  call void @"swap_$2"(i32* %pointer18, i32* %pointer22)
  store i32 1, i32* %changed, align 4
  br label %after7

after7:                                           ; preds = %then, %cond6
  %lval_tmp23 = load i32, i32* %i, align 4
  %addtmp24 = add i32 %lval_tmp23, 1
  store i32 %addtmp24, i32* %i, align 4
  br label %cond1
}

define void @"swap_$2"(i32* %0, i32* %1) {
entry:
  %t = alloca i32, align 4
  %x = alloca i32*, align 8
  store i32* %0, i32** %x, align 8
  %y = alloca i32*, align 8
  store i32* %1, i32** %y, align 8
  %lval_tmp = load i32*, i32** %x, align 8
  %lval_tmp1 = load i32, i32* %lval_tmp, align 4
  store i32 %lval_tmp1, i32* %t, align 4
  %lval_tmp2 = load i32*, i32** %x, align 8
  %lval_tmp3 = load i32*, i32** %y, align 8
  %lval_tmp4 = load i32, i32* %lval_tmp3, align 4
  store i32 %lval_tmp4, i32* %lval_tmp2, align 4
  %lval_tmp5 = load i32*, i32** %y, align 8
  %lval_tmp6 = load i32, i32* %t, align 4
  store i32 %lval_tmp6, i32* %lval_tmp5, align 4
  ret void
}

define void @"writeArray_$3"(i8* %0, i32 %1, i32* %2) {
entry:
  %i = alloca i32, align 4
  %msg = alloca i8*, align 8
  store i8* %0, i8** %msg, align 8
  %n = alloca i32, align 4
  store i32 %1, i32* %n, align 4
  %x = alloca i32*, align 8
  store i32* %2, i32** %x, align 8
  %lval_tmp = load i8*, i8** %msg, align 8
  call void @writeString(i8* %lval_tmp)
  store i32 0, i32* %i, align 4
  br label %cond

cond:                                             ; preds = %after4, %entry
  %lval_tmp1 = load i32, i32* %i, align 4
  %lval_tmp2 = load i32, i32* %n, align 4
  %lesstmp = icmp slt i32 %lval_tmp1, %lval_tmp2
  br i1 %lesstmp, label %body, label %after

body:                                             ; preds = %cond
  br label %cond3

after:                                            ; preds = %cond
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  ret void

cond3:                                            ; preds = %body
  %lval_tmp5 = load i32, i32* %i, align 4
  %greatertmp = icmp sgt i32 %lval_tmp5, 0
  br i1 %greatertmp, label %then, label %after4

then:                                             ; preds = %cond3
  call void @writeString(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @", ", i32 0, i32 0))
  br label %after4

after4:                                           ; preds = %then, %cond3
  %lval_tmp6 = load i32, i32* %i, align 4
  %lval_tmp7 = load i32*, i32** %x, align 8
  %pointer = getelementptr i32, i32* %lval_tmp7, i32 %lval_tmp6
  %lval_tmp8 = load i32, i32* %pointer, align 4
  call void @writeInteger(i32 %lval_tmp8)
  %lval_tmp9 = load i32, i32* %i, align 4
  %addtmp = add i32 %lval_tmp9, 1
  store i32 %addtmp, i32* %i, align 4
  br label %cond
}
