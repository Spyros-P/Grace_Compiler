; ModuleID = 'grace program'
source_filename = "grace program"

@" " = private constant [2 x i8] c" \00", align 1
@"\0A" = private constant [2 x i8] c"\0A\00", align 1
@A = private global [3 x [3 x [3 x i32]]] zeroinitializer
@N = private global i32 0
@i = private global i32 0
@j = private global i32 0
@element = private global i32 0

define i32 @main() {
entry:
  store i32 3, i32* @N, align 4
  store i32 0, i32* @i, align 4
  br label %cond

cond:                                             ; preds = %after4, %entry
  %lval_tmp = load i32, i32* @i, align 4
  %lval_tmp1 = load i32, i32* @N, align 4
  %lesstmp = icmp slt i32 %lval_tmp, %lval_tmp1
  br i1 %lesstmp, label %body, label %after

body:                                             ; preds = %cond
  store i32 0, i32* @j, align 4
  br label %cond2

after:                                            ; preds = %cond
  store i32 0, i32* @i, align 4
  br label %cond15

cond2:                                            ; preds = %body3, %body
  %lval_tmp5 = load i32, i32* @j, align 4
  %lval_tmp6 = load i32, i32* @N, align 4
  %lesstmp7 = icmp slt i32 %lval_tmp5, %lval_tmp6
  br i1 %lesstmp7, label %body3, label %after4

body3:                                            ; preds = %cond2
  %0 = call i32 @readInteger()
  store i32 %0, i32* @element, align 4
  %lval_tmp8 = load i32, i32* @i, align 4
  %pointer = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* getelementptr inbounds ([3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* @A, i32 0, i32 0), i32 0, i32 %lval_tmp8
  %lval_tmp9 = load i32, i32* @j, align 4
  %pointer10 = getelementptr [3 x i32], [3 x i32]* %pointer, i32 0, i32 %lval_tmp9
  %lval_tmp11 = load i32, i32* @element, align 4
  store i32 %lval_tmp11, i32* %pointer10, align 4
  %lval_tmp12 = load i32, i32* @j, align 4
  %addtmp = add i32 %lval_tmp12, 1
  store i32 %addtmp, i32* @j, align 4
  br label %cond2

after4:                                           ; preds = %cond2
  %lval_tmp13 = load i32, i32* @i, align 4
  %addtmp14 = add i32 %lval_tmp13, 1
  store i32 %addtmp14, i32* @i, align 4
  br label %cond

cond15:                                           ; preds = %after23, %after
  %lval_tmp18 = load i32, i32* @i, align 4
  %lval_tmp19 = load i32, i32* @N, align 4
  %lesstmp20 = icmp slt i32 %lval_tmp18, %lval_tmp19
  br i1 %lesstmp20, label %body16, label %after17

body16:                                           ; preds = %cond15
  store i32 0, i32* @j, align 4
  br label %cond21

after17:                                          ; preds = %cond15
  %lval_tmp36 = load i32, i32* @N, align 4
  call void @"matmult_$2"([3 x i32]* getelementptr inbounds ([3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* @A, i32 0, i32 0, i32 0), [3 x i32]* getelementptr inbounds ([3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* @A, i32 0, i32 1, i32 0), [3 x i32]* getelementptr inbounds ([3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* @A, i32 0, i32 2, i32 0), i32 %lval_tmp36)
  %lval_tmp37 = load i32, i32* @N, align 4
  call void @"print_$1"([3 x i32]* getelementptr inbounds ([3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* @A, i32 0, i32 2, i32 0), i32 %lval_tmp37)
  ret i32 0

cond21:                                           ; preds = %body22, %body16
  %lval_tmp24 = load i32, i32* @j, align 4
  %lval_tmp25 = load i32, i32* @N, align 4
  %lesstmp26 = icmp slt i32 %lval_tmp24, %lval_tmp25
  br i1 %lesstmp26, label %body22, label %after23

body22:                                           ; preds = %cond21
  %1 = call i32 @readInteger()
  store i32 %1, i32* @element, align 4
  %lval_tmp27 = load i32, i32* @i, align 4
  %pointer28 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* getelementptr inbounds ([3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* @A, i32 0, i32 1), i32 0, i32 %lval_tmp27
  %lval_tmp29 = load i32, i32* @j, align 4
  %pointer30 = getelementptr [3 x i32], [3 x i32]* %pointer28, i32 0, i32 %lval_tmp29
  %lval_tmp31 = load i32, i32* @element, align 4
  store i32 %lval_tmp31, i32* %pointer30, align 4
  %lval_tmp32 = load i32, i32* @j, align 4
  %addtmp33 = add i32 %lval_tmp32, 1
  store i32 %addtmp33, i32* @j, align 4
  br label %cond21

after23:                                          ; preds = %cond21
  %lval_tmp34 = load i32, i32* @i, align 4
  %addtmp35 = add i32 %lval_tmp34, 1
  store i32 %addtmp35, i32* @i, align 4
  br label %cond15
}

declare void @writeString(i8*)

declare i32 @readInteger()

declare void @writeInteger(i32)

define void @"print_$1"([3 x i32]* %0, i32 %1) {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %A = alloca [3 x i32]*, align 8
  store [3 x i32]* %0, [3 x i32]** %A, align 8
  %N = alloca i32, align 4
  store i32 %1, i32* %N, align 4
  store i32 0, i32* %i, align 4
  br label %cond

cond:                                             ; preds = %after4, %entry
  %lval_tmp = load i32, i32* %i, align 4
  %lval_tmp1 = load i32, i32* %N, align 4
  %subtmp = sub i32 %lval_tmp1, 1
  %lesstmp = icmp slt i32 %lval_tmp, %subtmp
  br i1 %lesstmp, label %body, label %after

body:                                             ; preds = %cond
  store i32 0, i32* %j, align 4
  br label %cond2

after:                                            ; preds = %cond
  %lval_tmp24 = load i32, i32* %N, align 4
  %subtmp25 = sub i32 %lval_tmp24, 1
  store i32 %subtmp25, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %cond26

cond2:                                            ; preds = %body3, %body
  %lval_tmp5 = load i32, i32* %j, align 4
  %lval_tmp6 = load i32, i32* %N, align 4
  %subtmp7 = sub i32 %lval_tmp6, 1
  %lesstmp8 = icmp slt i32 %lval_tmp5, %subtmp7
  br i1 %lesstmp8, label %body3, label %after4

body3:                                            ; preds = %cond2
  %lval_tmp9 = load i32, i32* %i, align 4
  %lval_tmp10 = load [3 x i32]*, [3 x i32]** %A, align 8
  %pointer = getelementptr [3 x i32], [3 x i32]* %lval_tmp10, i32 %lval_tmp9
  %lval_tmp11 = load i32, i32* %j, align 4
  %pointer12 = getelementptr [3 x i32], [3 x i32]* %pointer, i32 0, i32 %lval_tmp11
  %lval_tmp13 = load i32, i32* %pointer12, align 4
  call void @writeInteger(i32 %lval_tmp13)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @" ", i32 0, i32 0))
  %lval_tmp14 = load i32, i32* %j, align 4
  %addtmp = add i32 %lval_tmp14, 1
  store i32 %addtmp, i32* %j, align 4
  br label %cond2

after4:                                           ; preds = %cond2
  %lval_tmp15 = load i32, i32* %i, align 4
  %lval_tmp16 = load [3 x i32]*, [3 x i32]** %A, align 8
  %pointer17 = getelementptr [3 x i32], [3 x i32]* %lval_tmp16, i32 %lval_tmp15
  %lval_tmp18 = load i32, i32* %N, align 4
  %subtmp19 = sub i32 %lval_tmp18, 1
  %pointer20 = getelementptr [3 x i32], [3 x i32]* %pointer17, i32 0, i32 %subtmp19
  %lval_tmp21 = load i32, i32* %pointer20, align 4
  call void @writeInteger(i32 %lval_tmp21)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  %lval_tmp22 = load i32, i32* %i, align 4
  %addtmp23 = add i32 %lval_tmp22, 1
  store i32 %addtmp23, i32* %i, align 4
  br label %cond

cond26:                                           ; preds = %body27, %after
  %lval_tmp29 = load i32, i32* %j, align 4
  %lval_tmp30 = load i32, i32* %N, align 4
  %subtmp31 = sub i32 %lval_tmp30, 1
  %lesstmp32 = icmp slt i32 %lval_tmp29, %subtmp31
  br i1 %lesstmp32, label %body27, label %after28

body27:                                           ; preds = %cond26
  %lval_tmp33 = load i32, i32* %i, align 4
  %lval_tmp34 = load [3 x i32]*, [3 x i32]** %A, align 8
  %pointer35 = getelementptr [3 x i32], [3 x i32]* %lval_tmp34, i32 %lval_tmp33
  %lval_tmp36 = load i32, i32* %j, align 4
  %pointer37 = getelementptr [3 x i32], [3 x i32]* %pointer35, i32 0, i32 %lval_tmp36
  %lval_tmp38 = load i32, i32* %pointer37, align 4
  call void @writeInteger(i32 %lval_tmp38)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @" ", i32 0, i32 0))
  %lval_tmp39 = load i32, i32* %j, align 4
  %addtmp40 = add i32 %lval_tmp39, 1
  store i32 %addtmp40, i32* %j, align 4
  br label %cond26

after28:                                          ; preds = %cond26
  %lval_tmp41 = load i32, i32* %i, align 4
  %lval_tmp42 = load [3 x i32]*, [3 x i32]** %A, align 8
  %pointer43 = getelementptr [3 x i32], [3 x i32]* %lval_tmp42, i32 %lval_tmp41
  %lval_tmp44 = load i32, i32* %N, align 4
  %subtmp45 = sub i32 %lval_tmp44, 1
  %pointer46 = getelementptr [3 x i32], [3 x i32]* %pointer43, i32 0, i32 %subtmp45
  %lval_tmp47 = load i32, i32* %pointer46, align 4
  call void @writeInteger(i32 %lval_tmp47)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  ret void
}

define void @"matmult_$2"([3 x i32]* %0, [3 x i32]* %1, [3 x i32]* %2, i32 %3) {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %sum = alloca i32, align 4
  %A = alloca [3 x i32]*, align 8
  store [3 x i32]* %0, [3 x i32]** %A, align 8
  %B = alloca [3 x i32]*, align 8
  store [3 x i32]* %1, [3 x i32]** %B, align 8
  %C = alloca [3 x i32]*, align 8
  store [3 x i32]* %2, [3 x i32]** %C, align 8
  %N = alloca i32, align 4
  store i32 %3, i32* %N, align 4
  store i32 0, i32* %i, align 4
  br label %cond

cond:                                             ; preds = %after4, %entry
  %lval_tmp = load i32, i32* %i, align 4
  %lval_tmp1 = load i32, i32* %N, align 4
  %lesstmp = icmp slt i32 %lval_tmp, %lval_tmp1
  br i1 %lesstmp, label %body, label %after

body:                                             ; preds = %cond
  store i32 0, i32* %j, align 4
  br label %cond2

after:                                            ; preds = %cond
  ret void

cond2:                                            ; preds = %after10, %body
  %lval_tmp5 = load i32, i32* %j, align 4
  %lval_tmp6 = load i32, i32* %N, align 4
  %lesstmp7 = icmp slt i32 %lval_tmp5, %lval_tmp6
  br i1 %lesstmp7, label %body3, label %after4

body3:                                            ; preds = %cond2
  store i32 0, i32* %k, align 4
  store i32 0, i32* %sum, align 4
  br label %cond8

after4:                                           ; preds = %cond2
  %lval_tmp36 = load i32, i32* %i, align 4
  %addtmp37 = add i32 %lval_tmp36, 1
  store i32 %addtmp37, i32* %i, align 4
  br label %cond

cond8:                                            ; preds = %body9, %body3
  %lval_tmp11 = load i32, i32* %k, align 4
  %lval_tmp12 = load i32, i32* %N, align 4
  %lesstmp13 = icmp slt i32 %lval_tmp11, %lval_tmp12
  br i1 %lesstmp13, label %body9, label %after10

body9:                                            ; preds = %cond8
  %lval_tmp14 = load i32, i32* %sum, align 4
  %lval_tmp15 = load i32, i32* %i, align 4
  %lval_tmp16 = load [3 x i32]*, [3 x i32]** %A, align 8
  %pointer = getelementptr [3 x i32], [3 x i32]* %lval_tmp16, i32 %lval_tmp15
  %lval_tmp17 = load i32, i32* %k, align 4
  %pointer18 = getelementptr [3 x i32], [3 x i32]* %pointer, i32 0, i32 %lval_tmp17
  %lval_tmp19 = load i32, i32* %pointer18, align 4
  %lval_tmp20 = load i32, i32* %k, align 4
  %lval_tmp21 = load [3 x i32]*, [3 x i32]** %B, align 8
  %pointer22 = getelementptr [3 x i32], [3 x i32]* %lval_tmp21, i32 %lval_tmp20
  %lval_tmp23 = load i32, i32* %j, align 4
  %pointer24 = getelementptr [3 x i32], [3 x i32]* %pointer22, i32 0, i32 %lval_tmp23
  %lval_tmp25 = load i32, i32* %pointer24, align 4
  %multmp = mul i32 %lval_tmp19, %lval_tmp25
  %addtmp = add i32 %lval_tmp14, %multmp
  store i32 %addtmp, i32* %sum, align 4
  %lval_tmp26 = load i32, i32* %k, align 4
  %addtmp27 = add i32 %lval_tmp26, 1
  store i32 %addtmp27, i32* %k, align 4
  br label %cond8

after10:                                          ; preds = %cond8
  %lval_tmp28 = load i32, i32* %i, align 4
  %lval_tmp29 = load [3 x i32]*, [3 x i32]** %C, align 8
  %pointer30 = getelementptr [3 x i32], [3 x i32]* %lval_tmp29, i32 %lval_tmp28
  %lval_tmp31 = load i32, i32* %j, align 4
  %pointer32 = getelementptr [3 x i32], [3 x i32]* %pointer30, i32 0, i32 %lval_tmp31
  %lval_tmp33 = load i32, i32* %sum, align 4
  store i32 %lval_tmp33, i32* %pointer32, align 4
  %lval_tmp34 = load i32, i32* %j, align 4
  %addtmp35 = add i32 %lval_tmp34, 1
  store i32 %addtmp35, i32* %j, align 4
  br label %cond2
}
