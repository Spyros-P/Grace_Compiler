; ModuleID = 'grace program'
source_filename = "grace program"

@N = private global i32 0
@limit = private global i32 0
@"fibo(" = private constant [6 x i8] c"fibo(\00", align 1
@") = " = private constant [5 x i8] c") = \00", align 1
@"\0A" = private constant [2 x i8] c"\0A\00", align 1

define i32 @main() {
entry:
  store i32 46, i32* @limit, align 4
  store i32 0, i32* @N, align 4
  br label %cond

cond:                                             ; preds = %body, %entry
  %lval_tmp = load i32, i32* @N, align 4
  %lval_tmp1 = load i32, i32* @limit, align 4
  %lesseqtmp = icmp sle i32 %lval_tmp, %lval_tmp1
  br i1 %lesseqtmp, label %body, label %after

body:                                             ; preds = %cond
  call void @writeString(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"fibo(", i32 0, i32 0))
  %lval_tmp2 = load i32, i32* @N, align 4
  call void @writeInteger(i32 %lval_tmp2)
  call void @writeString(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @") = ", i32 0, i32 0))
  %lval_tmp3 = load i32, i32* @N, align 4
  %0 = call i32 @"fibo_$1"(i32 %lval_tmp3)
  call void @writeInteger(i32 %0)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  %lval_tmp4 = load i32, i32* @N, align 4
  %addtmp = add i32 %lval_tmp4, 1
  store i32 %addtmp, i32* @N, align 4
  br label %cond

after:                                            ; preds = %cond
  ret i32 0
}

declare void @writeString(i8*)

declare void @writeInteger(i32)

define i32 @"fibo_$1"(i32 %0) {
entry:
  %x = alloca i32, align 4
  store i32 %0, i32* %x, align 4
  br label %cond

cond:                                             ; preds = %entry
  %lval_tmp = load i32, i32* %x, align 4
  %equaltmp = icmp eq i32 %lval_tmp, 0
  br i1 %equaltmp, label %then, label %after

then:                                             ; preds = %cond
  ret i32 0

after:                                            ; preds = %after_ret, %cond
  br label %cond1

after_ret:                                        ; No predecessors!
  br label %after

cond1:                                            ; preds = %after
  %lval_tmp4 = load i32, i32* %x, align 4
  %equaltmp5 = icmp eq i32 %lval_tmp4, 1
  br i1 %equaltmp5, label %then2, label %after3

then2:                                            ; preds = %cond1
  ret i32 1

after3:                                           ; preds = %after_ret6, %cond1
  %lval_tmp7 = load i32, i32* %x, align 4
  %subtmp = sub i32 %lval_tmp7, 1
  %1 = call i32 @"fibo_$1"(i32 %subtmp)
  %lval_tmp8 = load i32, i32* %x, align 4
  %subtmp9 = sub i32 %lval_tmp8, 2
  %2 = call i32 @"fibo_$1"(i32 %subtmp9)
  %addtmp = add i32 %1, %2
  ret i32 %addtmp

after_ret6:                                       ; No predecessors!
  br label %after3

after_ret10:                                      ; No predecessors!
  ret i32 0
}
