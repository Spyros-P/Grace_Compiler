; ModuleID = 'grace program'
source_filename = "grace program"

@x = private global [2 x i32] zeroinitializer
@"x[0] = " = private constant [8 x i8] c"x[0] = \00", align 1
@"\0A" = private constant [2 x i8] c"\0A\00", align 1
@"x[1] = " = private constant [8 x i8] c"x[1] = \00", align 1
@"\0A\0ASWAPPP\0A" = private constant [10 x i8] c"\0A\0ASWAPPP\0A\00", align 1
@"\0Ax[0] = " = private constant [9 x i8] c"\0Ax[0] = \00", align 1

define i32 @main() {
entry:
  store i32 17, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 0), align 4
  store i32 42, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 1), align 4
  call void @writeString(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"x[0] = ", i32 0, i32 0))
  %lval_tmp = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 0), align 4
  call void @writeInteger(i32 %lval_tmp)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  call void @writeString(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"x[1] = ", i32 0, i32 0))
  %lval_tmp1 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 1), align 4
  call void @writeInteger(i32 %lval_tmp1)
  call void @writeString(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"\0A\0ASWAPPP\0A", i32 0, i32 0))
  call void @"swap_$1"(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 1))
  call void @writeString(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"\0Ax[0] = ", i32 0, i32 0))
  %lval_tmp2 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 0), align 4
  call void @writeInteger(i32 %lval_tmp2)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  call void @writeString(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"x[1] = ", i32 0, i32 0))
  %lval_tmp3 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 1), align 4
  call void @writeInteger(i32 %lval_tmp3)
  call void @writeString(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"\0A\0ASWAPPP\0A", i32 0, i32 0))
  call void @"swap_2_$2"(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 0))
  call void @writeString(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"\0Ax[0] = ", i32 0, i32 0))
  %lval_tmp4 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 0), align 4
  call void @writeInteger(i32 %lval_tmp4)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  call void @writeString(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"x[1] = ", i32 0, i32 0))
  %lval_tmp5 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @x, i32 0, i32 1), align 4
  call void @writeInteger(i32 %lval_tmp5)
  call void @writeString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"\0A", i32 0, i32 0))
  ret i32 0
}

declare void @writeString(i8*)

declare void @writeInteger(i32)

define void @"swap_$1"(i32* %0, i32* %1) {
entry:
  %temp = alloca i32, align 4
  %x = alloca i32*, align 8
  store i32* %0, i32** %x, align 8
  %y = alloca i32*, align 8
  store i32* %1, i32** %y, align 8
  %lval_tmp = load i32*, i32** %x, align 8
  %lval_tmp1 = load i32, i32* %lval_tmp, align 4
  store i32 %lval_tmp1, i32* %temp, align 4
  %lval_tmp2 = load i32*, i32** %x, align 8
  %lval_tmp3 = load i32*, i32** %y, align 8
  %lval_tmp4 = load i32, i32* %lval_tmp3, align 4
  store i32 %lval_tmp4, i32* %lval_tmp2, align 4
  %lval_tmp5 = load i32*, i32** %y, align 8
  %lval_tmp6 = load i32, i32* %temp, align 4
  store i32 %lval_tmp6, i32* %lval_tmp5, align 4
  ret void
}

define void @"swap_2_$2"(i32* %0) {
entry:
  %x = alloca i32*, align 8
  store i32* %0, i32** %x, align 8
  %lval_tmp = load i32*, i32** %x, align 8
  %pointer = getelementptr i32, i32* %lval_tmp, i32 0
  %lval_tmp1 = load i32*, i32** %x, align 8
  %pointer2 = getelementptr i32, i32* %lval_tmp1, i32 1
  call void @"swap_$1"(i32* %pointer, i32* %pointer2)
  ret void
}
